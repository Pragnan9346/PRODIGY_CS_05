from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP, ICMP

def packet_callback(packet):
    if IP in packet:
        ip_layer = packet[IP]
        print(f"New Packet: {ip_layer.src} -> {ip_layer.dst}")
        
        if TCP in packet:
            print(f"Protocol: TCP | Src Port: {packet[TCP].sport} -> Dst Port: {packet[TCP].dport}")
        elif UDP in packet:
            print(f"Protocol: UDP | Src Port: {packet[UDP].sport} -> Dst Port: {packet[UDP].dport}")
        elif ICMP in packet:
            print("Protocol: ICMP")
        
        print(f"Payload: {bytes(packet[IP].payload)}\n")

# Capture packets on the default interface
sniff(prn=packet_callback, store=False)
